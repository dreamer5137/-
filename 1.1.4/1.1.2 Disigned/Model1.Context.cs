//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _1
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class БИЗЬНЕСь_ИР311Entities : DbContext
    {
        public БИЗЬНЕСь_ИР311Entities()
            : base("name=БИЗЬНЕСь_ИР311Entities")
        {
        }
        private static БИЗЬНЕСь_ИР311Entities _context;
        public static БИЗЬНЕСь_ИР311Entities GetContext()
        {
            if (_context == null)
                _context = new БИЗЬНЕСь_ИР311Entities();
            return _context;
        }
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Apartament> Apartaments { get; set; }
        public virtual DbSet<House> Houses { get; set; }
        public virtual DbSet<ResidentialComplex> ResidentialComplexes { get; set; }
        public virtual DbSet<rez33> rez33 { get; set; }
        public virtual DbSet<rez1> rez1 { get; set; }
        public virtual DbSet<rez2> rez2 { get; set; }
    
        public virtual int ChangeApar(Nullable<int> aparID, Nullable<int> houseId, Nullable<int> number, Nullable<decimal> area, Nullable<int> cOF, Nullable<int> section, Nullable<int> floor, Nullable<int> isSold, Nullable<int> apartC, Nullable<int> aVA)
        {
            var aparIDParameter = aparID.HasValue ?
                new ObjectParameter("AparID", aparID) :
                new ObjectParameter("AparID", typeof(int));
    
            var houseIdParameter = houseId.HasValue ?
                new ObjectParameter("HouseId", houseId) :
                new ObjectParameter("HouseId", typeof(int));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            var areaParameter = area.HasValue ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(decimal));
    
            var cOFParameter = cOF.HasValue ?
                new ObjectParameter("COF", cOF) :
                new ObjectParameter("COF", typeof(int));
    
            var sectionParameter = section.HasValue ?
                new ObjectParameter("Section", section) :
                new ObjectParameter("Section", typeof(int));
    
            var floorParameter = floor.HasValue ?
                new ObjectParameter("Floor", floor) :
                new ObjectParameter("Floor", typeof(int));
    
            var isSoldParameter = isSold.HasValue ?
                new ObjectParameter("IsSold", isSold) :
                new ObjectParameter("IsSold", typeof(int));
    
            var apartCParameter = apartC.HasValue ?
                new ObjectParameter("apartC", apartC) :
                new ObjectParameter("apartC", typeof(int));
    
            var aVAParameter = aVA.HasValue ?
                new ObjectParameter("AVA", aVA) :
                new ObjectParameter("AVA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangeApar", aparIDParameter, houseIdParameter, numberParameter, areaParameter, cOFParameter, sectionParameter, floorParameter, isSoldParameter, apartCParameter, aVAParameter);
        }
    
        public virtual int ChangeHome(Nullable<int> idHouse, Nullable<int> idRes, string street, string number, Nullable<decimal> houseC, Nullable<int> hVA)
        {
            var idHouseParameter = idHouse.HasValue ?
                new ObjectParameter("IdHouse", idHouse) :
                new ObjectParameter("IdHouse", typeof(int));
    
            var idResParameter = idRes.HasValue ?
                new ObjectParameter("IdRes", idRes) :
                new ObjectParameter("IdRes", typeof(int));
    
            var streetParameter = street != null ?
                new ObjectParameter("street", street) :
                new ObjectParameter("street", typeof(string));
    
            var numberParameter = number != null ?
                new ObjectParameter("number", number) :
                new ObjectParameter("number", typeof(string));
    
            var houseCParameter = houseC.HasValue ?
                new ObjectParameter("houseC", houseC) :
                new ObjectParameter("houseC", typeof(decimal));
    
            var hVAParameter = hVA.HasValue ?
                new ObjectParameter("HVA", hVA) :
                new ObjectParameter("HVA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangeHome", idHouseParameter, idResParameter, streetParameter, numberParameter, houseCParameter, hVAParameter);
        }
    
        public virtual int ChangeResident(Nullable<int> id, string name, string city, string status, Nullable<decimal> complexC, Nullable<int> complexValueAdded)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var complexCParameter = complexC.HasValue ?
                new ObjectParameter("complexC", complexC) :
                new ObjectParameter("complexC", typeof(decimal));
    
            var complexValueAddedParameter = complexValueAdded.HasValue ?
                new ObjectParameter("ComplexValueAdded", complexValueAdded) :
                new ObjectParameter("ComplexValueAdded", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangeResident", idParameter, nameParameter, cityParameter, statusParameter, complexCParameter, complexValueAddedParameter);
        }
    
        public virtual int DelApar(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DelApar", idParameter);
        }
    
        public virtual int DelHome(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DelHome", idParameter);
        }
    
        public virtual int DelResident(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DelResident", idParameter);
        }
    
        public virtual int InsertApar(Nullable<int> houseid, Nullable<int> number, Nullable<decimal> area, Nullable<int> cOR, Nullable<int> section, Nullable<int> floor, Nullable<int> isSold, Nullable<int> apartC, Nullable<int> aVA)
        {
            var houseidParameter = houseid.HasValue ?
                new ObjectParameter("Houseid", houseid) :
                new ObjectParameter("Houseid", typeof(int));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            var areaParameter = area.HasValue ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(decimal));
    
            var cORParameter = cOR.HasValue ?
                new ObjectParameter("COR", cOR) :
                new ObjectParameter("COR", typeof(int));
    
            var sectionParameter = section.HasValue ?
                new ObjectParameter("Section", section) :
                new ObjectParameter("Section", typeof(int));
    
            var floorParameter = floor.HasValue ?
                new ObjectParameter("Floor", floor) :
                new ObjectParameter("Floor", typeof(int));
    
            var isSoldParameter = isSold.HasValue ?
                new ObjectParameter("IsSold", isSold) :
                new ObjectParameter("IsSold", typeof(int));
    
            var apartCParameter = apartC.HasValue ?
                new ObjectParameter("apartC", apartC) :
                new ObjectParameter("apartC", typeof(int));
    
            var aVAParameter = aVA.HasValue ?
                new ObjectParameter("AVA", aVA) :
                new ObjectParameter("AVA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertApar", houseidParameter, numberParameter, areaParameter, cORParameter, sectionParameter, floorParameter, isSoldParameter, apartCParameter, aVAParameter);
        }
    
        public virtual int InsertHome(Nullable<int> idRes, string street, string number, Nullable<decimal> houseC, Nullable<int> hVA)
        {
            var idResParameter = idRes.HasValue ?
                new ObjectParameter("IdRes", idRes) :
                new ObjectParameter("IdRes", typeof(int));
    
            var streetParameter = street != null ?
                new ObjectParameter("street", street) :
                new ObjectParameter("street", typeof(string));
    
            var numberParameter = number != null ?
                new ObjectParameter("number", number) :
                new ObjectParameter("number", typeof(string));
    
            var houseCParameter = houseC.HasValue ?
                new ObjectParameter("houseC", houseC) :
                new ObjectParameter("houseC", typeof(decimal));
    
            var hVAParameter = hVA.HasValue ?
                new ObjectParameter("HVA", hVA) :
                new ObjectParameter("HVA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertHome", idResParameter, streetParameter, numberParameter, houseCParameter, hVAParameter);
        }
    
        public virtual int InsertResident(string name, string city, string status, Nullable<decimal> complexC, Nullable<int> complexValueAdded)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var complexCParameter = complexC.HasValue ?
                new ObjectParameter("complexC", complexC) :
                new ObjectParameter("complexC", typeof(decimal));
    
            var complexValueAddedParameter = complexValueAdded.HasValue ?
                new ObjectParameter("ComplexValueAdded", complexValueAdded) :
                new ObjectParameter("ComplexValueAdded", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertResident", nameParameter, cityParameter, statusParameter, complexCParameter, complexValueAddedParameter);
        }
    
        public virtual int RachetHome2(Nullable<decimal> areaC, Nullable<decimal> roomsC, Nullable<decimal> baseC)
        {
            var areaCParameter = areaC.HasValue ?
                new ObjectParameter("areaC", areaC) :
                new ObjectParameter("areaC", typeof(decimal));
    
            var roomsCParameter = roomsC.HasValue ?
                new ObjectParameter("roomsC", roomsC) :
                new ObjectParameter("roomsC", typeof(decimal));
    
            var baseCParameter = baseC.HasValue ?
                new ObjectParameter("baseC", baseC) :
                new ObjectParameter("baseC", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RachetHome2", areaCParameter, roomsCParameter, baseCParameter);
        }
    
        public virtual int RachetKV3(Nullable<decimal> areaC, Nullable<decimal> roomsC, Nullable<decimal> baseC)
        {
            var areaCParameter = areaC.HasValue ?
                new ObjectParameter("areaC", areaC) :
                new ObjectParameter("areaC", typeof(decimal));
    
            var roomsCParameter = roomsC.HasValue ?
                new ObjectParameter("roomsC", roomsC) :
                new ObjectParameter("roomsC", typeof(decimal));
    
            var baseCParameter = baseC.HasValue ?
                new ObjectParameter("baseC", baseC) :
                new ObjectParameter("baseC", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RachetKV3", areaCParameter, roomsCParameter, baseCParameter);
        }
    
        public virtual int RachetZk1(Nullable<decimal> areaC, Nullable<decimal> roomsC, Nullable<decimal> baseC)
        {
            var areaCParameter = areaC.HasValue ?
                new ObjectParameter("areaC", areaC) :
                new ObjectParameter("areaC", typeof(decimal));
    
            var roomsCParameter = roomsC.HasValue ?
                new ObjectParameter("roomsC", roomsC) :
                new ObjectParameter("roomsC", typeof(decimal));
    
            var baseCParameter = baseC.HasValue ?
                new ObjectParameter("baseC", baseC) :
                new ObjectParameter("baseC", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RachetZk1", areaCParameter, roomsCParameter, baseCParameter);
        }
    }
}
